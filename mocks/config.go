// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	abstract "github.com/mqdvi-dp/go-common/abstract"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Config is an autogenerated mock type for the Config type
type Config struct {
	mock.Mock
}

// Exit provides a mock function with given fields:
func (_m *Config) Exit() {
	_m.Called()
}

// GetServiceName provides a mock function with given fields:
func (_m *Config) GetServiceName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetServiceName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Injections provides a mock function with given fields: depsFunc
func (_m *Config) Injections(depsFunc func(context.Context) []abstract.Closer) {
	_m.Called(depsFunc)
}

// NewConfig creates a new instance of Config. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *Config {
	mock := &Config{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
