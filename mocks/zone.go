// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// Zone is an autogenerated mock type for the Zone type
type Zone struct {
	mock.Mock
}

// Format provides a mock function with given fields:
func (_m *Zone) Format() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Format")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Value provides a mock function with given fields:
func (_m *Zone) Value() time.Time {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Value")
	}

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// NewZone creates a new instance of Zone. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewZone(t interface {
	mock.TestingT
	Cleanup(func())
}) *Zone {
	mock := &Zone{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
